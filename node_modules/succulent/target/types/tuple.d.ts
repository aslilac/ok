import { Schema, SchemaBase } from "../schema";
export declare function $tuple<T extends unknown[]>(...schemas: [...Schema.WrapAll<T>]): Schema<T>;
declare type _MonotupleNumber = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;
declare type _$Monotuple<T, N extends _MonotupleNumber, TArr extends T[]> = TArr["length"] extends N ? TArr : _$Monotuple<T, N, [...TArr, T]>;
declare type _Monotuple<T, N extends _MonotupleNumber> = _$Monotuple<T, N, []>;
export declare function $monotuple<T, N extends _MonotupleNumber>(schema: SchemaBase<T>, length: N): Schema<_Monotuple<T, N>>;
export {};
