import { Schema } from "../schema";
import { is } from "./is";
export function union(...schemas) {
    return new Schema((t) => schemas.some((schema) => is(t, schema)), function* () {
        for (const schema of schemas)
            yield* Schema.from(schema);
    });
}
export function or(x, y) {
    return new Schema((t) => is(t, x) || is(t, y), function* () {
        yield* Schema.from(x);
        yield* Schema.from(y);
    });
}
export function and(x, y) {
    return new Schema((t) => is(t, x) && is(t, y));
}
//# sourceMappingURL=logic.js.map