import { Schema } from "../schema";
export function $map(keySchema, valueSchema) {
    return new Schema((x) => {
        if (!(x instanceof Map)) {
            return false;
        }
        for (const [key, value] of x) {
            if (!Schema.check(keySchema, key) || !Schema.check(valueSchema, value)) {
                return false;
            }
        }
        // If we made it through the whole map, and nothing failed, then everything passed!
        return true;
    });
}
export function $set(schema) {
    return new Schema((x) => {
        if (!(x instanceof Set)) {
            return false;
        }
        for (const key of x) {
            if (!Schema.check(schema, key)) {
                return false;
            }
        }
        // If we made it through the whole set, and nothing failed, then everything passed!
        return true;
    });
}
//# sourceMappingURL=collections.js.map